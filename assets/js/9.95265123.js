(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{213:function(e,a,o){"use strict";o.r(a);var s=o(0),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"listingitemdetails问题-ok"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#listingitemdetails问题-ok"}},[e._v("#")]),e._v(" ListingItemDetails问题 - ok")]),e._v(" "),o("blockquote",[o("p",[e._v("写入的ListingSummaryID与ListingSummary表中对应的记录的ID不一致;")])]),e._v(" "),o("p",[o("code",[e._v("原因分析")]),e._v("\nMongoDB集群的配置中有w，j和readPreference三个选项进行组合配置读/写操作；"),o("br"),e._v("\n当readPreference为secondary时，采用事务写入的批量数据，在当前connection连接中无法马上读取到结果；")]),e._v(" "),o("p",[o("code",[e._v("解决方案")]),e._v("\n暂用readPreference = 'primary',但是会造成写入延迟；"),o("br"),e._v("\n考虑采用读写分离connection进行；")]),e._v(" "),o("p",[o("code",[e._v("参考资料")]),e._v("：")]),e._v(" "),o("p",[e._v("○ https://blog.51cto.com/lizhuquan0769/1763287"),o("br"),e._v("\n○ https://docs.mongodb.com/manual/core/read-isolation-consistency-recency/index.html"),o("br"),e._v("\n○ http://www.mongoing.com/archives/2916")]),e._v(" "),o("h1",{attrs:{id:"mongodb事务提交-ok"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mongodb事务提交-ok"}},[e._v("#")]),e._v(" MongoDB事务提交 - ok")]),e._v(" "),o("blockquote",[o("p",[e._v("Nodejs中使用批量异步提交MongoDB操作，首先得开启session,操作中传递session进去,最后commit session，如果按500个数据记录就需要分片事务提交，那么就得预先储存多个session，并且通过异步并发运行触发方法进行提交。")])]),e._v(" "),o("p",[o("code",[e._v("解决方案")]),e._v("\n通过批量声明session并暂存到数组,然后使用并发async.parallel进行提交;")]),e._v(" "),o("h1",{attrs:{id:"mongodb-join表-ok"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-join表-ok"}},[e._v("#")]),e._v(" MongoDB Join表 - ok")]),e._v(" "),o("p",[e._v("MongoDB Join 表是通过aggregate中$lookup方法进行join操作，join后的记录集合会写入到as配置的字段中，此时数据集中存在嵌套文档的字段,实体相当于leftJoin的一棵树；\n"),o("code",[e._v("1")]),e._v("  lookup之后，采用unwind获得相当于union right的集合,然后采用addFields把需要的字段添加到结果中；\n"),o("code",[e._v("2")]),e._v("  lookup之后,直接采用addFields把需要的字段添加到结果集中,相当于union操作；")]),e._v(" "),o("p",[o("code",[e._v("解决方案")]),e._v("\nCore/unit/mongodb.js底层封装中,提供转换方法,最终转换为pipeline json格式内容")]),e._v(" "),o("h1",{attrs:{id:"图片对比功能"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#图片对比功能"}},[e._v("#")]),e._v(" 图片对比功能")]),e._v(" "),o("blockquote",[o("p",[e._v("由于eBayMonitor v2.0版本中对listing图片对比相关功能已进行去掉处理,需要跟Alex进行沟通并恢复该部分的功能;")])]),e._v(" "),o("pre",[o("code",[e._v("• compare_picture\n• getPictureUpdateDate\n")])]),e._v(" "),o("h1",{attrs:{id:"salesenquiry-分析功能"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#salesenquiry-分析功能"}},[e._v("#")]),e._v(" SalesEnquiry 分析功能")]),e._v(" "),o("p",[o("code",[e._v("1")]),e._v(" 通过SP_updateNonVariationSalesEnquiry分析ListingItemDetails中的数据,得出临时数据集合#analyseData\n"),o("code",[e._v("2")]),e._v(" 对#analyseData进行统计计算,产生临时数据集合#calculateData\n"),o("code",[e._v("3")]),e._v(" 把#calculateData计算结果写入到实体表NonVariationSalesEnquiry\n"),o("code",[e._v("4")]),e._v(" 通过SP_UpdateSalesEnquiry中,对NonVariationSalesEnquiry数据进行拼装,产生SalesEnquiry数据,最终写入到实体表SalesEnquiry")]),e._v(" "),o("h1",{attrs:{id:"salesdeals-功能"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#salesdeals-功能"}},[e._v("#")]),e._v(" SalesDeals 功能")]),e._v(" "),o("p",[e._v("SalesDeals是通过python爬虫进行交易页面数据获取并写入到eBayDeals实体表")]),e._v(" "),o("h1",{attrs:{id:"api-docs-实现方案"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-docs-实现方案"}},[e._v("#")]),e._v(" API Docs 实现方案")]),e._v(" "),o("blockquote",[o("p",[e._v("SwaggerAPIDocs分2部分,swagger服务部署和文档生成")])]),e._v(" "),o("blockquote",[o("p",[e._v("Js es6生态下,swagger暂时没有一款与DjangoRESTframework那么完整的api解决方案,包括没有自动根据已有接口生成api文档的功能;")])]),e._v(" "),o("p",[o("code",[e._v("方案1")]),e._v("通过swagger-js-codegen / swaggerClient进行接口文件生成")]),e._v(" "),o("p",[o("code",[e._v("方案2")]),e._v("通过function注释添加相关的swagger语法内容,然后通过swagger-jsdoc进行捕获")]),e._v(" "),o("p",[o("code",[e._v("方案3")]),e._v("人工维护一份api接口json配置表,直接采用koa-swagger2部署swagger服务并加载该文件用于接口文档展示")]),e._v(" "),o("p",[o("code",[e._v("方案4")]),e._v("项目混合typescript,采用koa-swagger-decorator,为接口额外声明schema对象,用于描述接口内容")]),e._v(" "),o("p",[o("code",[e._v("方案5")]),e._v("放弃swagger,采用graphql进行api接口声明与开发")]),e._v(" "),o("h1",{attrs:{id:"koa-swagger实现方案"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#koa-swagger实现方案"}},[e._v("#")]),e._v(" Koa Swagger实现方案")]),e._v(" "),o("blockquote",[o("p",[e._v("Koa暂时没有很好的Swagger整套解决方案,只能采用套件拼凑的方法实现:")])]),e._v(" "),o("p",[o("code",[e._v("Swapi + Joi Schema + KoaRouter")])]),e._v(" "),o("blockquote",[o("p",[e._v("采用Github上一个开源swapi的项目,通过Joi语义化库配置出接口Schema,供swagger进行参数解析与结果回调,swapi的加入需要根据Joi语义化结构的Schema针对现有框架的KoaRouter进行Schema的实现的修改,实现一个schema通用KoaRouter核Swapi")])]),e._v(" "),o("p",[o("code",[e._v("参考资料")]),e._v(":")]),e._v(" "),o("p",[o("code",[e._v("https://github.com/haowen737/koa-swapi")])]),e._v(" "),o("h1",{attrs:{id:"koa-router-prefix冲突问题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#koa-router-prefix冲突问题"}},[e._v("#")]),e._v(" Koa Router prefix冲突问题")]),e._v(" "),o("blockquote",[o("p",[e._v("当KoaRouter存在多个实例,可以通过prefix设置路由前缀达到路由分组;")])]),e._v(" "),o("p",[o("code",[e._v("问题")])]),e._v(" "),o("p",[e._v("如果存在2个相同prefix的router,则按照use顺序进行注册,后者将会获得匹配prefix解析的优先级,那么前面注册的router就会失效")])])}),[],!1,null,null,null);a.default=t.exports}}]);